// write a code for 3 bit binary to gray code converter in behavioral level of modeling
module binary_to_gray_nbit_behavioral #(
  parameter N = 4
)(
  input  [N-1:0] binary,
  output reg [N-1:0] gray
);

  integer i;

  always @(*) begin
    gray[N-1] = binary[N-1]; // MSB is same
    for (i = N-2; i >= 0; i = i - 1) begin
      gray[i] = binary[i+1] ^ binary[i];
    end
  end

endmodule
 
module tb_binary_to_gray_nbit_behavioral;

  parameter N = 4;

  reg [N-1:0] binary;
  wire [N-1:0] gray;

  // Positional port mapping: order matters! (binary, gray)
  binary_to_gray_nbit_behavioral #(.N(N)) DUT (binary, gray);

  integer i;

  initial begin
    $display("Binary | Gray");
    $monitor("%b | %b", binary, gray);

    for (i = 0; i < (1 << N); i = i + 1) begin
      binary = i[N-1:0];
      #10;
    end

    $finish;
  end
endmodule
